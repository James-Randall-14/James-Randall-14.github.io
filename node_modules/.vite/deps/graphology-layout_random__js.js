import {
  require_defaults
} from "./chunk-HGZQWRJC.js";
import {
  require_is_graph
} from "./chunk-ULR5OFWV.js";
import {
  __commonJS
} from "./chunk-5WRI5ZAA.js";

// node_modules/graphology-layout/random.js
var require_random = __commonJS({
  "node_modules/graphology-layout/random.js"(exports, module) {
    var resolveDefaults = require_defaults();
    var isGraph = require_is_graph();
    var DEFAULTS = {
      dimensions: ["x", "y"],
      center: 0.5,
      rng: Math.random,
      scale: 1
    };
    function genericRandomLayout(assign, graph, options) {
      if (!isGraph(graph))
        throw new Error(
          "graphology-layout/random: the given graph is not a valid graphology instance."
        );
      options = resolveDefaults(options, DEFAULTS);
      var dimensions = options.dimensions;
      if (!Array.isArray(dimensions) || dimensions.length < 1)
        throw new Error("graphology-layout/random: given dimensions are invalid.");
      var d = dimensions.length;
      var center = options.center;
      var rng = options.rng;
      var scale = options.scale;
      var offset = (center - 0.5) * scale;
      function assignPosition(target) {
        for (var i = 0; i < d; i++) {
          target[dimensions[i]] = rng() * scale + offset;
        }
        return target;
      }
      if (!assign) {
        var positions = {};
        graph.forEachNode(function(node) {
          positions[node] = assignPosition({});
        });
        return positions;
      }
      graph.updateEachNodeAttributes(
        function(_, attr) {
          assignPosition(attr);
          return attr;
        },
        {
          attributes: dimensions
        }
      );
    }
    var randomLayout = genericRandomLayout.bind(null, false);
    randomLayout.assign = genericRandomLayout.bind(null, true);
    module.exports = randomLayout;
  }
});
export default require_random();
//# sourceMappingURL=graphology-layout_random__js.js.map
